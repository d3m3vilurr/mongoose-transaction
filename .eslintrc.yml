extends: standard
parser: babel-eslint
plugins:
    - standard
env:
    node: true
rules:
    semi: ['error', 'always']
    indent:
        - error
        - 4
        -
            SwitchCase: 1
            FunctionDeclaration:
                parameters: 'first'
            CallExpression:
                arguments: 'first'
            ArrayExpression: 'first'
            ObjectExpression: 'first'
            FunctionExpression:
                body: 1
                parameters: 'first'
            flatTernaryExpressions: true
    space-before-function-paren:
        - error
        -
            anonymous: never
            named: never
            asyncArrow: never
    max-len: ['error', 80]
    no-mixed-spaces-and-tabs: ['error', true]
    comma-dangle: ['error', {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "always-multiline",
        "exports": "always-multiline",
        "functions": "always-multiline",
    }]
    generator-star-spacing: 0
    no-console: 1
    require-jsdoc: ['error', {
        require: {
            FunctionDeclaration: false,
            MethodDefinition: false,
            ClassDeclaration: true
        }
    }]
    callback-return: 'error'
    no-var: 'error'
    prefer-const: 'error'
    prefer-rest-params: 'error'
    func-names: ['error', 'always']
    max-depth: ['error', 5]
    max-nested-callbacks: ['error', 5]
    max-lines: ['error', {'max': 1000, 'skipComments': true}]
    object-property-newline: off
    object-shorthand: ['error', 'never']
    curly: ['error', 'all']
    array-bracket-spacing: ['error', 'never', {
        singleValue: false,
        objectsInArrays: false,
        arraysInArrays: false,
    }]
    object-curly-spacing: ['error', 'never', {
        arraysInObjects: false,
        objectsInObjects: false,
    }]
    no-return-await: off
globals:
    Exception: true
    LoggingException: true
    NoLoggingException: true
    FatalException: true
    LogicException: true
